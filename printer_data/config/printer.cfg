[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[force_move]
enable_force_move: True

[virtual_pins]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include stealthburner_leds.cfg]
[include betterstart.cfg]
[exclude_object]
#[include autoz.cfg]
[include nozzle_scrub.cfg]

[include pause_resume.cfg]

[include sfs.cfg]

#[include aux_fan.cfg]

# [fan_menu_aux.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_290008000F50535556323420-if00
restart_method: command
##--------------------------------------------------------------------
[mcu nhk]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_4E363334320B946D-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 8000            #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[mcu rpi]
serial: /tmp/klipper_host_mcu




   
#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 250
position_max: 250
homing_speed: 80   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: PG6
driver_SGTHRS: 170

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin:tmc2209_stepper_y:virtual_endstop 
position_min: 0
position_endstop: 255
position_max: 255
homing_speed: 80  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: PG9
driver_SGTHRS: 170
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 4    # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 240 ## For LDO 300^3 kits use 290, for 250^3 kits use 240
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24
enable_pin: !nhk:gpio25
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: nhk:gpio9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## The kit ships with ATC Semitec 104NT thermistors, check your thermistor type if you have a hotend with an integrated thermistor
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio29
pullup_resistor: 2200
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
## LDO heaters have their sensor type labelled on the heater
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.7
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################
[probe]

pin: !nhk:gpio10
x_offset: 0
y_offset: 0
#z_offset: 6.42
speed: 5
samples:2 
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3


activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}
    
    {% if TARGET_TEMP > PROBE_TEMP %}
    { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
    M109 S{ PROBE_TEMP }
    {% else %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if ACTUAL_TEMP > MAX_TEMP %}
    { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
    {% endif %}
    {% endif %}
    
    
    
    
    
    #####################################################################
    #   Fan Control
    #####################################################################
    
[fan]
##  Print Cooling Fan - FAN0
pin: nhk:gpio6
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: nhk:gpio5
max_power: 1.0
kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

#[output_pin uv]
## Chamber Lighting - FAN5
#pin: PD15
#pwm:true
#shutdown_value: 0
#value:0
#cycle_time: 0.01

[output_pin caselight]
## Chamber Lighting - FAN4
pin: PD14
pwm:true
shutdown_value: 0
value:0.5
cycle_time: 0.01

[neopixel sb_leds]
## Stealthburner lighting - RGB_LED
pin: nhk:gpio7
chain_count: 3
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio21
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
probe_points:
    125, 125, 20
    
    #####################################################################
    # 	Additional Sensors
    #####################################################################
    
    #[temperature_sensor chamber]
    ## Chamber Temperature - T1
    #sensor_type: ATC Semitec 104NT-4-R025H42G
    #sensor_pin: PF5
    #min_temp: 0
    #max_temp: 100
    #gcode_id: chamber_th

###########################################
##Shake tune##    
###########################################
[shaketune]
 result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
 number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
 keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
 timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
 measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
 max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
 dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.
[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[temperature_sensor nh_temp]
## Nitehawk PCB Sensor
sensor_type: CMFB103F3950FANT
sensor_pin: nhk:gpio26
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: nh_th
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor PI4]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:125,125
speed:30
z_hop:10
z_hop_speed: 10
move_to_previous: False

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5
    
    ## Uncomment below for 300mm build
    #z_positions:
    #   -50, 18
    #   150, 348
    #   350, 18
    #points:
    #   30, 5
    #   150, 245
    #   270, 5
    
    ## Uncomment below for 350mm build
    #z_positions:
    #   -50, 18
    #   175, 398
    #   400, 18
    #points:
    #   30, 5
    #   175, 295
    #   320, 5
    
    
    ##--------------------------------------------------------------------
    
speed: 300
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,
    
    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>
    
    #####################################################################
    #   Displays
    #####################################################################
    
    ##  Uncomment the display that you have
    #--------------------------------------------------------------------
    
    #[display]
    ##  RepRapDiscount 128x64 Full Graphic Smart Controller
    #lcd_type: st7920
    #cs_pin: EXP1_4
    #sclk_pin: EXP1_5
    #sid_pin: EXP1_3
    #menu_timeout: 40
    #encoder_pins: ^EXP2_5, ^EXP2_3
    #click_pin: ^!EXP1_2
    
    #[output_pin beeper]
    #pin: EXP1_1
    
    #--------------------------------------------------------------------
    
    #[display]
    ##  mini12864 LCD Display
    #lcd_type: uc1701
    #cs_pin: EXP1_3
    #a0_pin: EXP1_4
    #rst_pin: EXP1_5
    #encoder_pins: ^EXP2_5, ^EXP2_3
    #click_pin: ^!EXP1_2
    #contrast: 63
    #spi_software_miso_pin: EXP2_1
    #spi_software_mosi_pin: EXP2_6
    #spi_software_sclk_pin: EXP2_2
    
    #[neopixel btt_mini12864]
    ##  To control Neopixel RGB in mini12864 display
    #pin: EXP1_6
    #chain_count: 3
    #initial_RED: 0.1
    #initial_GREEN: 0.5
    #initial_BLUE: 0.0
    #color_order: RGB
    
    ##  Set RGB values on boot up for each Neopixel.
    ##  Index 1 = display, Index 2 and 3 = Knob
    #[delayed_gcode setdisplayneopixel]
    #initial_duration: 1
    #gcode:
    #        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
    #        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    #        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3
    
    #--------------------------------------------------------------------
    
    
    #####################################################################
    #   Macros
    #####################################################################
[gcode_macro PID_CALIBRATE_BED]
description: Bed Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(65)}


[gcode_macro PID_CALIBRATE_HOTEND]
description: Hotend Pid Calibrate
gcode:
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(230)}
    
    ##print Start ######
    
#[gcode_macro PRINT_START]
#gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#    {% set target_bed = params.BED|int %}
#    {% set target_extruder = params.EXTRUDER|int %}
#    {% set target_chamber = params.CHAMBER|default("30")|int %}
#    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    
    # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
#    SET_DISPLAY_TEXT MSG="Homing"
#    STATUS_HOMING         # Sets SB-leds to homing-mode
#    G28                   # Full home (XYZ)
#    G90                   # Absolut position
    
    ##  Uncomment for bed mesh (1 of 2)
#    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
    
    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
#    {% if params.BED|int > 90 %}
#    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#    STATUS_HEATING                                      # Sets SB-leds to heating-mode
#    M106 S255                                           # Turns on the PT-fan
    
    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore
    
#    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#    M190 S{target_bed}                                  # Sets the target temp for the bed
#    SET_DISPLAY_TEXT MSG="Heatsoak Chamber: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    
    # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
#    {% else %}
#    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#    STATUS_HEATING                                      # Sets SB-leds to heating-mode
#    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#    M190 S{target_bed}                                  # Sets the target temp for the bed
#    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
#    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
#    {% endif %}
    
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
#    SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
#    M109 S150                                    # Heats the nozzle to 150c
    
    ##  Uncomment for Trident (Z_TILT_ADJUST)
#    SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
#    STATUS_LEVELING                          # Sets SB-leds to leveling-mode
#    CLEAN_NOZZLE
#    Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
    
    ##  Uncomment for Klicky auto-z
#    CLEAN_NOZZLE
#    CLEAN_NOZZLE
#    CALIBRATE_Z                                 # Calibrates Z-offset with klicky
#    SET_DISPLAY_TEXT MSG="Setting Z-offset"             # Displays info
    
    ##  Uncomment for bed mesh (2 of 2)
#    SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
#    STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
    #bed_mesh_calibrate ADAPTIVE=1               # Starts bed mesh
#    BED_MESH_CALIBRATE ADAPTIVE=1
    # Heats up the nozzle up to target via data from slicer
#    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
#    STATUS_HEATING                                                # Sets SB-leds to heating-mode
#    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
#    M107                                                          # Turns off partcooling fan
#    M109 S{target_extruder}                                       # Heats the nozzle to printing temp
    ########enable SFS tangle sensor#####
    # Gets ready to print by doing a purge line and updating the SB-leds
#    SET_DISPLAY_TEXT MSG="Printing Job"          # Displays info
#    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
#    G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
#    G0 Z0.4                                          # Raises Z to 0.4
#    G91                                              # Incremental positioning
#    G1 X100 E20 F1000                                # Purge line
#    G90
    ########enable SFS tangle sensor#####                                           # Absolut position
#    SFS_ENABLE
#[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#gcode:
    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-15.0 F3600                 ; retract filament
#    TURN_OFF_HEATERS
#    CLEAN_NOZZLE
#    SET_GCODE_OFFSET Z=0.0; (Reset the G-Code Z offset clears auto z setting and microstepping)
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan
    
    #description: Disable smart filament sensor
#    SFS_DISABLE
    
#    SET_DISPLAY_TEXT MSG="Job Finished"
    
[bed_mesh]
speed: 300
horizontal_move_z: 2
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
mesh_min: 15, 15
mesh_max: 245,245
zero_reference_position: 125,125 #for use with stock z endstop

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260
#zero_reference_position: 150,150 #for use with stock z endstop

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
#zero_reference_position: 175,175 #for use with stock z endstop

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.425
#*# pid_ki = 1.407
#*# pid_kd = 319.779
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.444
#*# pid_ki = 2.873
#*# pid_kd = 70.401
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.068750, 0.069375, 0.075625, 0.053750, 0.067500
#*# 	0.033125, 0.016875, 0.011250, 0.023125, 0.036875
#*# 	0.029375, 0.008125, 0.000000, 0.004375, 0.018750
#*# 	0.053125, 0.026875, 0.025000, 0.016250, 0.034375
#*# 	0.098125, 0.081250, 0.062500, 0.071250, 0.078125
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 210.0
#*# min_y = 40.0
#*# max_y = 210.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 76.4
#*# damping_ratio_x = 0.046
#*# shaper_type_y = mzv
#*# shaper_freq_y = 54.4
#*# damping_ratio_y = 0.044
#*#
#*# [probe]
#*# z_offset = -0.180
